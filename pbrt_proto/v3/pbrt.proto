edition = "2023";

package pbrt_proto.v3;

enum AntialiasingMode {
  option features.enum_type = CLOSED;
  CLOSEDFORM = 0;
  NONE = 1;
}

message BlackbodySpectrum {
  double temperature = 1 [features.field_presence = LEGACY_REQUIRED];
  double scale = 2 [features.field_presence = LEGACY_REQUIRED];
}

enum ImageWrapping {
  option features.enum_type = CLOSED;
  REPEAT = 0;
  BLACK = 1;
  CLAMP = 2;
}

enum Mapping2D {
  option features.enum_type = CLOSED;
  UV = 0;
  SPHERICAL = 1;
  CYLINDRICAL = 2;
  PLANAR = 3;
}

message Point {
  double x = 1 [features.field_presence = LEGACY_REQUIRED];
  double y = 2 [features.field_presence = LEGACY_REQUIRED];
  double z = 3 [features.field_presence = LEGACY_REQUIRED];
}

message RgbSpectrum {
  double r = 1 [features.field_presence = LEGACY_REQUIRED];
  double g = 2 [features.field_presence = LEGACY_REQUIRED];
  double b = 3 [features.field_presence = LEGACY_REQUIRED];
}

message SampledSpectrum {
  message Sample {
    double wavelength = 1 [features.field_presence = LEGACY_REQUIRED];
    double intensity = 2 [features.field_presence = LEGACY_REQUIRED];
  }

  repeated Sample samples = 1;
}

message XyzSpectrum {
  double x = 1 [features.field_presence = LEGACY_REQUIRED];
  double y = 2 [features.field_presence = LEGACY_REQUIRED];
  double z = 3 [features.field_presence = LEGACY_REQUIRED];
}

message Vector {
  double x = 1 [features.field_presence = LEGACY_REQUIRED];
  double y = 2 [features.field_presence = LEGACY_REQUIRED];
  double z = 3 [features.field_presence = LEGACY_REQUIRED];
}

message Spectrum {
  oneof spectrum_type {
    BlackbodySpectrum blackbody_spectrum = 1;
    RgbSpectrum rgb_spectrum = 2;
    XyzSpectrum xyz_spectrum = 3;
    SampledSpectrum sampled_spectrum = 4;
    string sampled_spectrum_filename = 5;
  }
}

message FloatTextureParameter {
  oneof float_texture_parameter_type {
    double float_value = 1;
    string float_texture_name = 2;
  }
}

message SpectrumTextureParameter {
  oneof spectrum_texture_parameter_type {
    double uniform_spectrum = 1;
    BlackbodySpectrum blackbody_spectrum = 2;
    RgbSpectrum rgb_spectrum = 3;
    XyzSpectrum xyz_spectrum = 4;
    SampledSpectrum sampled_spectrum = 5;
    string sampled_spectrum_filename = 6;
    string spectrum_texture_name = 7;
  }
}

message Accelerator {
  message Bvh {
    enum SplitMethod {
      option features.enum_type = CLOSED;
      SAH = 0;
      MIDDLE = 1;
      EQUAL = 2;
      HLBVH = 3;
    }

    int32 maxnodeprims = 1 [default = 4];
    SplitMethod splitmethod = 2;
  }

  message KdTree {
    int32 intersectcost = 1 [default = 80];
    int32 traversalcost = 2 [default = 1];
    double emptybonus = 3 [default = 0.5];
    int32 maxprims = 4 [default = 1];
    int32 maxdepth = 5 [default = -1];
  }

  oneof accelerator_type {
    Bvh bvh = 1;
    KdTree kdtree = 2;
  }
}

message ActiveTransform {
  enum ActiveTransformation {
    option features.enum_type = CLOSED;
    ALL = 1;
    START_TIME = 2;
    END_TIME = 3;
  };

  ActiveTransformation active = 1 [features.field_presence = LEGACY_REQUIRED];
}

message AreaLightSource {
  message Diffuse {
    Spectrum L = 1 [features.field_presence = EXPLICIT];
    bool twosided = 2 [default = false];
    int32 samples = 3 [default = 1];
    Spectrum scale = 4 [features.field_presence = EXPLICIT];
  }

  oneof area_light_source_type {
    Diffuse diffuse = 1;
  }
}

message AttributeBegin {
  // Empty Message
}

message AttributeEnd {
  // Empty Message
}

message Camera {
  message ScreenWindow {
    double x_min = 1;
    double x_max = 2;
    double y_min = 3;
    double y_max = 4;
  }

  message Environment {
    double shutteropen = 1 [default = 0.0];
    double shutterclose = 2 [default = 1.0];
  }

  message Orthographic {
    double lensradius = 1 [default = 0.0];
    double focaldistance = 2 [default = 1e6];
    double frameaspectratio = 3 [features.field_presence = EXPLICIT];
    ScreenWindow screenwindow = 4  [features.field_presence = EXPLICIT];
    double shutteropen = 5 [default = 0.0];
    double shutterclose = 6 [default = 1.0];
  }

  message Perspective {
    double lensradius = 1 [default = 0.0];
    double focaldistance = 2 [default = 1e6];
    double frameaspectratio = 3 [features.field_presence = EXPLICIT];
    ScreenWindow screenwindow = 4 [features.field_presence = EXPLICIT];
    double fov = 5 [default = 90.0];
    double halffov = 6 [features.field_presence = EXPLICIT];
    double shutteropen = 7 [default = 0.0];
    double shutterclose = 8 [default = 1.0];
  }

  message Realistic {
    string lensfile = 1;
    double aperturediameter = 2 [default = 1.0];
    double focaldistance = 3 [default = 10.0];
    bool simpleweighting = 4 [default = true];
    double shutteropen = 5 [default = 0.0];
    double shutterclose = 6 [default = 1.0];
  }

  oneof camera_type {
    Environment environment = 1;
    Orthographic orthographic = 2;
    Perspective perspective = 3;
    Realistic realistic = 4;
  }
}

message ConcatTransform {
  double m00 = 1 [features.field_presence = LEGACY_REQUIRED];
  double m01 = 2 [features.field_presence = LEGACY_REQUIRED];
  double m02 = 3 [features.field_presence = LEGACY_REQUIRED];
  double m03 = 4 [features.field_presence = LEGACY_REQUIRED];
  double m10 = 5 [features.field_presence = LEGACY_REQUIRED];
  double m11 = 6 [features.field_presence = LEGACY_REQUIRED];
  double m12 = 7 [features.field_presence = LEGACY_REQUIRED];
  double m13 = 8 [features.field_presence = LEGACY_REQUIRED];
  double m20 = 9 [features.field_presence = LEGACY_REQUIRED];
  double m21 = 10 [features.field_presence = LEGACY_REQUIRED];
  double m22 = 11 [features.field_presence = LEGACY_REQUIRED];
  double m23 = 12 [features.field_presence = LEGACY_REQUIRED];
  double m30 = 13 [features.field_presence = LEGACY_REQUIRED];
  double m31 = 14 [features.field_presence = LEGACY_REQUIRED];
  double m32 = 15 [features.field_presence = LEGACY_REQUIRED];
  double m33 = 16 [features.field_presence = LEGACY_REQUIRED];
}

message CoordinateSystem {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];
}

message CoordSysTransform {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];
}

message Film {
  message Image {
    message CropWindow {
      double x_min = 1 [default = 0.0];
      double x_max = 2 [default = 1.0];
      double y_min = 3 [default = 0.0];
      double y_max = 4 [default = 1.0];
    };

    int32 xresolution = 1 [default = 1280];
    int32 yresolution = 2  [default = 720];
    CropWindow cropwindow = 3;
    double scale = 4  [default = 1.0];
    double maxsampleluminance = 5 [default = inf];
    double diagonal = 6 [default = 35.0];
    string filename = 7 [default = "pbrt.exr"];
  }

  oneof film_type {
    Image image = 1;
  }
}

message Filter {
  message Box {
    double xwidth = 1 [default = 0.5];
    double ywidth = 2 [default = 0.5];
  }

  message Gaussian {
    double xwidth = 1 [default = 2.0];
    double ywidth = 2 [default = 2.0];
    double alpha = 3 [default = 2.0];
  }

  message Mitchell {
    double xwidth = 1 [default = 0.5];
    double ywidth = 2 [default = 0.5];
    double B = 3 [default = 0.333333333333333333];
    double C = 4 [default = 0.333333333333333333];
  }

  message Sinc {
    double xwidth = 1 [default = 4.0];
    double ywidth = 2 [default = 4.0];
    double tau = 3 [default = 3.0];
  }

  message Triangle {
    double xwidth = 1 [default = 2.0];
    double ywidth = 2 [default = 2.0];
  }

  oneof filter_type {
    Box box = 1;
    Gaussian gaussian = 2;
    Mitchell mitchell = 3;
    Sinc sinc = 4;
    Triangle triangle = 5;
  }
}

message FloatTexture {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];

  message Bilerp {
    FloatTextureParameter v00 = 1;
    FloatTextureParameter v01 = 2;
    FloatTextureParameter v10 = 3;
    FloatTextureParameter v11 = 4;
    Mapping2D mapping = 5 [default = UV];
    double uscale = 6 [default = 1.0];
    double vscale = 7 [default = 1.0];
    double udelta = 8 [default = 0.0];
    double vdelta = 9 [default = 0.0];
    Vector v1 = 10 [features.field_presence = EXPLICIT];
    Vector v2 = 11 [features.field_presence = EXPLICIT];
  }

  message Checkerboard2D {
    FloatTextureParameter tex1 = 1;
    FloatTextureParameter tex2 = 2;
    AntialiasingMode aamode = 3 [default = CLOSEDFORM];
    Mapping2D mapping = 4 [default = UV];
    double uscale = 5 [default = 1.0];
    double vscale = 6 [default = 1.0];
    double udelta = 7 [default = 0.0];
    double vdelta = 8 [default = 0.0];
    Vector v1 = 9 [features.field_presence = EXPLICIT];
    Vector v2 = 10 [features.field_presence = EXPLICIT];
  }

  message Checkerboard3D {
    FloatTextureParameter tex1 = 1;
    FloatTextureParameter tex2 = 2;
  }

  message Constant {
    FloatTextureParameter value = 1;
  }

  message Dots {
    FloatTextureParameter inside = 1;
    FloatTextureParameter outside = 2;
    Mapping2D mapping = 3 [default = UV];
    double uscale = 4 [default = 1.0];
    double vscale = 5 [default = 1.0];
    double udelta = 6 [default = 0.0];
    double vdelta = 7 [default = 0.0];
    Vector v1 = 8 [features.field_presence = EXPLICIT];
    Vector v2 = 9 [features.field_presence = EXPLICIT];
  }

  message FBm {
    int32 octaves = 1 [default = 8];
    double roughness = 2 [default = 0.5];
  }

  message ImageMap {
    string filename = 1 [default = ""];
    ImageWrapping wrap = 2 [default = REPEAT];
    double maxanisotropy = 3 [default = 8.0];
    bool trilinear = 4 [default = false];
    double scale = 5 [default = 1.0];
    bool gamma = 6 [features.field_presence = EXPLICIT];
    Mapping2D mapping = 7 [default = UV];
    double uscale = 8 [default = 1.0];
    double vscale = 9 [default = 1.0];
    double udelta = 10 [default = 0.0];
    double vdelta = 11 [default = 0.0];
    Vector v1 = 12 [features.field_presence = EXPLICIT];
    Vector v2 = 13 [features.field_presence = EXPLICIT];
  }

  message Marble {
    int32 octaves = 1 [default = 8];
    double roughness = 2 [default = 0.5];
    double scale = 3 [default = 1.0];
    double variation = 4 [default = 0.2];
  }

  message Mix {
    FloatTextureParameter tex1 = 1;
    FloatTextureParameter tex2 = 2;
    FloatTextureParameter amount = 3;
  }

  message Ptex {
    string filename = 1 [default = ""];
    double gamma = 2 [default = 2.2];
  }

  message Scale {
    FloatTextureParameter tex1 = 1;
    FloatTextureParameter tex2 = 2;
  }

  message Windy {
    // Empty Message
  }

  message Wrinkled {
    int32 octaves = 1 [default = 8];
    double roughness = 2 [default = 0.5];
  }

  oneof float_texture_type {
    Bilerp bilerp = 2;
    Checkerboard2D checkerboard2d = 3;
    Checkerboard3D checkerboard3d = 4;
    Constant constant = 5;
    Dots dots = 6;
    FBm fbm = 7;
    ImageMap imagemap = 8;
    Marble marble = 9;
    Mix mix = 10;
    Ptex ptex = 11;
    Scale scale = 12;
    Windy windy = 13;
    Wrinkled wrinkled = 14;
  }
}

message Identity {
  // Empty Message
}

message Include {
  string path = 1 [features.field_presence = LEGACY_REQUIRED];
}

message Integrator {
  enum LightSampleStrategy {
    option features.enum_type = CLOSED;
    SPATIAL = 0;
    POWER = 1;
    UNIFORM = 2;
  }

  message PixelBounds {
    int32 x_min = 1 [default = 0];
    int32 x_max = 2 [features.field_presence = EXPLICIT];
    int32 y_min = 3 [default = 0];
    int32 y_max = 4 [features.field_presence = EXPLICIT];
  }

  message AmbientOcclusion {
    bool cossample = 1 [default = true];
    int32 nsamples = 2 [default = 64];
    PixelBounds pixelbounds = 3;
  }

  message Bdpt {
    int32 maxdepth = 1 [default = 5];
    bool visualizestrategies = 2 [default = false];
    bool visualizeweights = 3 [default = false];
    LightSampleStrategy lightsamplestrategy = 4 [default = POWER];
    PixelBounds pixelbounds = 5;
  }

  message DirectLighting {
    enum Strategy {
      option features.enum_type = CLOSED;
      ALL = 0;
      ONE = 1;
    }

    int32 maxdepth = 1 [default = 5];
    Strategy strategy = 2;
    PixelBounds pixelbounds = 3;
  }

  message Mlt {
    int32 maxdepth = 1 [default = 5];
    int32 bootstrapsamples = 2 [default = 100000];
    int32 chains = 3 [default = 1000];
    int32 mutationsperpixel = 4 [default = 100];
    double largestepprobability = 5 [default = 0.3];
    double sigma = 6 [default = 0.01];
  }

  message Path {
    int32 maxdepth = 1 [default = 5];
    double rrthreshold = 2 [default = 1.0];
    LightSampleStrategy lightsamplestrategy = 3 [default = SPATIAL];
    PixelBounds pixelbounds = 4;
  }

  message Sppm {
    int32 maxdepth = 1 [default = 5];
    int32 numiterations = 2 [default = 64];
    int32 photonsperiteration = 3 [default = -1];
    int32 imagewritefrequency = 4 [default = -2147483648];
    double radius = 5 [default = 1.0];
  }

  message VolPath {
    int32 maxdepth = 1 [default = 5];
    double rrthreshold = 2 [default = 1.0];
    LightSampleStrategy lightsamplestrategy = 3 [default = SPATIAL];
    PixelBounds pixelbounds = 4;
  }

  message Whitted {
    message PixelBounds {
      int32 x_min = 1 [default = 0];
      int32 x_max = 2 [features.field_presence = EXPLICIT];
      int32 y_min = 3 [default = 0];
      int32 y_max = 4 [features.field_presence = EXPLICIT];
    }

    int32 maxdepth = 1 [default = 5];
    PixelBounds pixelbounds = 2;
  }

  oneof integrator_type {
    AmbientOcclusion ambientocclusion = 1;
    Bdpt bdpt = 2;
    DirectLighting directlighting = 3;
    Mlt mlt = 4;
    Path path = 5;
    Sppm sppm = 6;
    VolPath volpath = 7;
    Whitted whitted = 8;
  }
}

message MakeNamedMaterial {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];
  Material material = 2 [features.field_presence = LEGACY_REQUIRED];
}

message Material {
  message Disney {
    SpectrumTextureParameter color = 1 [features.field_presence = EXPLICIT];
    FloatTextureParameter anisotropic = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter clearcoat = 3 [features.field_presence = EXPLICIT];
    FloatTextureParameter clearcoatgloss = 4 [features.field_presence = EXPLICIT];
    FloatTextureParameter eta = 5 [features.field_presence = EXPLICIT];
    FloatTextureParameter metallic = 6 [features.field_presence = EXPLICIT];
    FloatTextureParameter roughness = 7 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter scatterdistance = 8 [features.field_presence = EXPLICIT];
    FloatTextureParameter sheen = 9 [features.field_presence = EXPLICIT];
    FloatTextureParameter sheentint = 10 [features.field_presence = EXPLICIT];
    FloatTextureParameter spectrans = 11 [features.field_presence = EXPLICIT];
    FloatTextureParameter speculartint = 12 [features.field_presence = EXPLICIT];
    bool thin = 13 [default = false];
    FloatTextureParameter difftrans = 14 [features.field_presence = EXPLICIT];
    FloatTextureParameter flatness = 15 [features.field_presence = EXPLICIT];
    FloatTextureParameter bumpmap = 16 [features.field_presence = EXPLICIT]; // Must check
  }

  message Fourier {
    string bsdffile = 1 [default = ""];
    FloatTextureParameter bumpmap = 2 [features.field_presence = EXPLICIT]; // Must check
  }

  message Glass {
    SpectrumTextureParameter Kr = 1 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Kt = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter eta = 3 [features.field_presence = EXPLICIT];
    FloatTextureParameter uroughness = 4 [features.field_presence = EXPLICIT];
    FloatTextureParameter vroughness = 5 [features.field_presence = EXPLICIT];
    bool remaproughness = 7 [default = true];
    FloatTextureParameter bumpmap = 8 [features.field_presence = EXPLICIT]; // Must check
  }

  message Hair {
    // If using pbrt_proto::v3::Canonicalize, sigma_a will be filled with the
    // default color if none of the other color-determining parameters are set.
    SpectrumTextureParameter sigma_a = 1 [features.field_presence = EXPLICIT];  // Must check
    SpectrumTextureParameter color = 2 [features.field_presence = EXPLICIT];  // Must check
    FloatTextureParameter eumelanin = 3 [features.field_presence = EXPLICIT];  // Must check
    FloatTextureParameter pheomelanin = 4 [features.field_presence = EXPLICIT];  // Must check
    FloatTextureParameter eta = 5 [features.field_presence = EXPLICIT];
    FloatTextureParameter beta_m = 6 [features.field_presence = EXPLICIT];
    FloatTextureParameter beta_n = 7 [features.field_presence = EXPLICIT];
    FloatTextureParameter alpha = 8 [features.field_presence = EXPLICIT];
    FloatTextureParameter bumpmap = 9 [features.field_presence = EXPLICIT]; // Must check
  }

  message KdSubsurface {
    SpectrumTextureParameter Kd = 1 [features.field_presence = EXPLICIT];
    FloatTextureParameter mfp = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter eta = 3 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Kr = 4 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Kt = 5 [features.field_presence = EXPLICIT];
    FloatTextureParameter uroughness = 6 [features.field_presence = EXPLICIT];
    FloatTextureParameter vroughness = 7 [features.field_presence = EXPLICIT];
    bool remaproughness = 8 [default = true];
    FloatTextureParameter bumpmap = 9 [features.field_presence = EXPLICIT]; // Must check
  }

  message Matte {
    SpectrumTextureParameter Kd = 1 [features.field_presence = EXPLICIT];
    FloatTextureParameter sigma = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter bumpmap = 3 [features.field_presence = EXPLICIT]; // Must check
  }

  message Metal {
    SpectrumTextureParameter eta = 1 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter k = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter roughness = 3 [features.field_presence = EXPLICIT];
    FloatTextureParameter uroughness = 4 [features.field_presence = EXPLICIT];
    FloatTextureParameter vroughness = 5 [features.field_presence = EXPLICIT];
    bool remaproughness = 6 [default = true];
    FloatTextureParameter bumpmap = 7 [features.field_presence = EXPLICIT]; // Must check
  }

  message Mirror {
    SpectrumTextureParameter Kr = 1 [features.field_presence = EXPLICIT];
    FloatTextureParameter bumpmap = 2 [features.field_presence = EXPLICIT]; // Must check
  }

  message Mix {
    FloatTextureParameter amount = 1 [features.field_presence = EXPLICIT];
    string namedmaterial1 = 2 [default = ""];
    string namedmaterial2 = 3 [default = ""];
  }

  message Plastic {
    SpectrumTextureParameter Kd = 1 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Ks = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter roughness = 3 [features.field_presence = EXPLICIT];
    bool remaproughness = 4 [default = true];
    FloatTextureParameter bumpmap = 5 [features.field_presence = EXPLICIT]; // Must check
  }

  message Substrate {
    SpectrumTextureParameter Kd = 1 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Ks = 2 [features.field_presence = EXPLICIT];
    FloatTextureParameter uroughness = 3 [features.field_presence = EXPLICIT];
    FloatTextureParameter vroughness = 4 [features.field_presence = EXPLICIT];
    bool remaproughness = 5 [default = true];
    FloatTextureParameter bumpmap = 6 [features.field_presence = EXPLICIT]; // Must check
  }

  message Subsurface {
    enum MeasuredSubsurfaces {
      option features.enum_type = CLOSED;
      APPLE = 0;
      CHICKEN1 = 1;
      CHICKEN2 = 2;
      CREAM = 3;
      KETCHUP = 4;
      MARBLE = 5;
      POTATO = 6;
      SKIMMILK = 7;
      SKIN1 = 8;
      SKIN2 = 9;
      SPECTRALON = 10;
      WHOLEMILK = 11;
      LOWFAT_MILK = 12;
      REDUCED_MILK = 13;
      REGULAR_MILK = 14;
      ESPRESSO = 15;
      MINT_MOCHA_COFFEE = 16;
      LOWFAT_SOY_MILK = 17;
      REGULAR_SOY_MILK = 18;
      LOWFAT_CHOCOLATE_MILK = 19;
      REGULAR_CHOCOLATE_MILK = 20;
      COKE = 21;
      PEPSI = 22;
      SPRITE = 23;
      GATORADE = 24;
      CHARDONNAY = 25;
      WHITE_ZINFANDEL = 26;
      MERLOT = 27;
      BUDWEISER_BEER = 28;
      COORS_LIGHT_BEER = 29;
      CLOROX = 30;
      APPLE_JUICE = 31;
      CRANBERRY_JUICE = 32;
      GRAPE_JUICE = 33;
      RUBY_GRAPEFRUIT_JUICE = 34;
      WHITE_GRAPEFRUIT_JUICE = 35;
      SHAMPOO = 36;
      STRAWBERRY_SHAMPOO = 37;
      HEAD_AND_SHOULDERS_SHAMPOO = 38;
      LEMON_TEA_POWDER = 39;
      ORANGE_POWDER = 40;
      PINK_LEMONADE = 41;
      CAPPUCCINO_POWDER = 42;
      SALT_POWDER = 43;
      SUGAR_POWDER = 44;
      SUISSE_MOCHA_POWDER = 45;
      PACIFIC_OCEAN_SURFACE_WATER = 46;
    }

    // If using pbrt_proto::v3::Canonicalize, there is no need to check this
    // field and the correct values will be filled into sigma_a and sigma_s.
    MeasuredSubsurfaces name = 1 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter sigma_a = 2 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter sigma_s = 3 [features.field_presence = EXPLICIT];
    double scale = 4 [default = 1.0];
    FloatTextureParameter eta = 5 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Kr = 6 [features.field_presence = EXPLICIT];
    SpectrumTextureParameter Kt = 7 [features.field_presence = EXPLICIT];
    FloatTextureParameter uroughness = 8 [features.field_presence = EXPLICIT];
    FloatTextureParameter vroughness = 9 [features.field_presence = EXPLICIT];
    bool remaproughness = 10 [default = true];
    FloatTextureParameter bumpmap = 11 [features.field_presence = EXPLICIT]; // Must check    
  }

  message Translucent {
    SpectrumTexture Kd = 1 [features.field_presence = EXPLICIT];
    SpectrumTexture Ks = 2 [features.field_presence = EXPLICIT];
    FloatTexture reflect = 3 [features.field_presence = EXPLICIT];
    FloatTexture transmit = 4 [features.field_presence = EXPLICIT];
    FloatTexture roughness = 5 [features.field_presence = EXPLICIT];
    bool remaproughness = 6 [default = true];
    FloatTexture bumpmap = 7 [features.field_presence = EXPLICIT]; // Must check
  }

  message Uber {
    SpectrumTexture Kd = 1 [features.field_presence = EXPLICIT];
    SpectrumTexture Ks = 2 [features.field_presence = EXPLICIT];
    SpectrumTexture Kr = 3 [features.field_presence = EXPLICIT];
    SpectrumTexture Kt = 4 [features.field_presence = EXPLICIT];
    FloatTexture roughness = 5 [features.field_presence = EXPLICIT];
    FloatTexture uroughness = 6 [features.field_presence = EXPLICIT];
    FloatTexture vroughness = 7 [features.field_presence = EXPLICIT];
    FloatTexture eta = 8 [features.field_presence = EXPLICIT];
    FloatTexture opacity = 9 [features.field_presence = EXPLICIT];
    bool remaproughness = 10 [default = true];
    FloatTexture bumpmap = 11 [features.field_presence = EXPLICIT]; // Must check
  }

  oneof material_type {
    Disney disney = 1;
    Fourier fourier = 2;
    Glass glass = 3;
    Hair hair = 4;
    KdSubsurface kdsubsurface = 5;
    Matte matte = 6;
    Metal metal = 7;
    Mirror mirror = 8;
    Mix mix = 9;
    Plastic plastic = 10;
    Substrate substrate = 11;
    Subsurface subsurface = 12;
    Translucent translucent = 13;
    Uber uber = 14;
  }
}

message NamedMaterial {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];
}

message LightSource {
  message Distant {
    Spectrum L = 1 [features.field_presence = EXPLICIT];
    pbrt_proto.v3.Point from = 2 [features.field_presence = EXPLICIT];
    pbrt_proto.v3.Point to = 3 [features.field_presence = EXPLICIT];
    Spectrum scale = 4 [features.field_presence = EXPLICIT];
  }

  message Goniometric {
    Spectrum I = 1 [features.field_presence = EXPLICIT];
    string mapname = 2 [default = ""];
    Spectrum scale = 3 [features.field_presence = EXPLICIT];
  }

  message Infinite {
    Spectrum L = 1 [features.field_presence = EXPLICIT];
    int32 samples = 2 [default = 1];
    string mapname = 3 [features.field_presence = EXPLICIT]; // Must check
    Spectrum scale = 4 [features.field_presence = EXPLICIT];
  }

  message Point {
    Spectrum L = 1 [features.field_presence = EXPLICIT];
    pbrt_proto.v3.Point from = 2 [features.field_presence = EXPLICIT];
    Spectrum scale = 3 [features.field_presence = EXPLICIT];
  }

  message Projection {
    Spectrum I = 1 [features.field_presence = EXPLICIT];
    double fov = 2 [default = 45.0];
    string mapname = 3 [default = ""];
    Spectrum scale = 4 [features.field_presence = EXPLICIT];
  }

  message Spot {
    Spectrum I = 1 [features.field_presence = EXPLICIT];
    pbrt_proto.v3.Point from = 2 [features.field_presence = EXPLICIT];
    pbrt_proto.v3.Point to = 3 [features.field_presence = EXPLICIT];
    double coneangle = 4 [default = 30.0];
    double conedeltaangle = 5 [default = 5.0];
    Spectrum scale = 6 [features.field_presence = EXPLICIT];
  }

  oneof light_source_type {
    Distant distant = 1;
    Goniometric goniometric = 2;
    Infinite infinite = 3;
    Point point = 4;
    Projection projection = 5;
    Spot spot = 6;
  }
}

message LookAt {
  double eye_x = 1 [features.field_presence = LEGACY_REQUIRED];
  double eye_y = 2 [features.field_presence = LEGACY_REQUIRED];
  double eye_z = 3 [features.field_presence = LEGACY_REQUIRED];
  double look_x = 4 [features.field_presence = LEGACY_REQUIRED];
  double look_y = 5 [features.field_presence = LEGACY_REQUIRED];
  double look_z = 6 [features.field_presence = LEGACY_REQUIRED];
  double up_x = 7 [features.field_presence = LEGACY_REQUIRED];
  double up_y = 8 [features.field_presence = LEGACY_REQUIRED];
  double up_z = 9 [features.field_presence = LEGACY_REQUIRED];
}

message ObjectBegin {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];
}

message ObjectEnd {
  // Empty Message
}

message ObjectInstance {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];
}

message ReverseOrientation {
  // Empty Message
}

message Rotate {
  double angle = 1 [features.field_presence = LEGACY_REQUIRED];
  double x = 2 [features.field_presence = LEGACY_REQUIRED];
  double y = 3 [features.field_presence = LEGACY_REQUIRED];
  double z = 4 [features.field_presence = LEGACY_REQUIRED];
}

message Sampler {
  message Halton {
    int32 pixelsamples = 1 [default = 16];
    bool samplepixelcenter = 2 [default = false];
  }

  message MaxMinDist {
    int32 pixelsamples = 1 [default = 16];
    int32 dimensions = 2 [default = 4];
  }

  message Random {
    int32 pixelsamples = 1 [default = 4];
  }

  message Sobol {
    int32 pixelsamples = 1 [default = 16];
  }

  message Stratified {
    bool jitter = 1 [default = true];
    int32 xsamples = 2 [default = 4];
    int32 ysamples = 3 [default = 4];
    int32 dimensions = 4 [default = 4];
  }

  message ZeroTwoSequence {
    int32 pixelsamples = 1 [default = 16];
    int32 dimensions = 2 [default = 4];
  }

  oneof sampler_type {
    Halton halton = 1;
    MaxMinDist maxmindist = 2;
    Random random = 3;
    Sobol sobol = 4;
    Stratified stratified = 5;
    ZeroTwoSequence zerotwosequence = 6;
  }
}

message Scale {
  double x = 1 [features.field_presence = LEGACY_REQUIRED];
  double y = 2 [features.field_presence = LEGACY_REQUIRED];
  double z = 3 [features.field_presence = LEGACY_REQUIRED];
}

message SpectrumTexture {
  string name = 1 [features.field_presence = LEGACY_REQUIRED];

  message Bilerp {
    SpectrumTextureParameter v00 = 1;
    SpectrumTextureParameter v01 = 2;
    SpectrumTextureParameter v10 = 3;
    SpectrumTextureParameter v11 = 4;
    Mapping2D mapping = 5 [default = UV];
    double uscale = 6 [default = 1.0];
    double vscale = 7 [default = 1.0];
    double udelta = 8 [default = 0.0];
    double vdelta = 9 [default = 0.0];
    Vector v1 = 10 [features.field_presence = EXPLICIT];
    Vector v2 = 11 [features.field_presence = EXPLICIT];
  }

  message Checkerboard2D {
    SpectrumTextureParameter tex1 = 1;
    SpectrumTextureParameter tex2 = 2;
    AntialiasingMode aamode = 3 [default = CLOSEDFORM];
    Mapping2D mapping = 4 [default = UV];
    double uscale = 5 [default = 1.0];
    double vscale = 6 [default = 1.0];
    double udelta = 7 [default = 0.0];
    double vdelta = 8 [default = 0.0];
    Vector v1 = 9 [features.field_presence = EXPLICIT];
    Vector v2 = 10 [features.field_presence = EXPLICIT];
  }

  message Checkerboard3D {
    SpectrumTextureParameter tex1 = 1;
    SpectrumTextureParameter tex2 = 2;
  }

  message Constant {
    SpectrumTextureParameter value = 1;
  }

  message Dots {
    SpectrumTextureParameter inside = 1;
    SpectrumTextureParameter outside = 2;
    Mapping2D mapping = 3 [default = UV];
    double uscale = 4 [default = 1.0];
    double vscale = 5 [default = 1.0];
    double udelta = 6 [default = 0.0];
    double vdelta = 7 [default = 0.0];
    Vector v1 = 8 [features.field_presence = EXPLICIT];
    Vector v2 = 9 [features.field_presence = EXPLICIT];
  }

  message FBm {
    int32 octaves = 1 [default = 8];
    double roughness = 2 [default = 0.5];
  }

  message ImageMap {
    string filename = 1 [default = ""];
    ImageWrapping wrap = 2 [default = REPEAT];
    double maxanisotropy = 3 [default = 8.0];
    bool trilinear = 4 [default = false];
    double scale = 5 [default = 1.0];
    bool gamma = 6 [features.field_presence = EXPLICIT];
    Mapping2D mapping = 7 [default = UV];
    double uscale = 8 [default = 1.0];
    double vscale = 9 [default = 1.0];
    double udelta = 10 [default = 0.0];
    double vdelta = 11 [default = 0.0];
    Vector v1 = 12 [features.field_presence = EXPLICIT];
    Vector v2 = 13 [features.field_presence = EXPLICIT];
  }

  message Marble {
    int32 octaves = 1 [default = 8];
    double roughness = 2 [default = 0.5];
    double scale = 3 [default = 1.0];
    double variation = 4 [default = 0.2];
  }

  message Mix {
    SpectrumTextureParameter tex1 = 1;
    SpectrumTextureParameter tex2 = 2;
    FloatTextureParameter amount = 3;
  }

  message Ptex {
    string filename = 1 [default = ""];
    double gamma = 2 [default = 2.2];
  }

  message Scale {
    SpectrumTextureParameter tex1 = 1;
    SpectrumTextureParameter tex2 = 2;
  }

  message Uv {
    Mapping2D mapping = 1 [default = UV];
    double uscale = 2 [default = 1.0];
    double vscale = 3 [default = 1.0];
    double udelta = 4 [default = 0.0];
    double vdelta = 5 [default = 0.0];
    Vector v1 = 6 [features.field_presence = EXPLICIT];
    Vector v2 = 7 [features.field_presence = EXPLICIT];
  }

  message Windy {
    // Empty Message
  }

  message Wrinkled {
    int32 octaves = 1 [default = 8];
    double roughness = 2 [default = 0.5];
  }

  oneof spectrum_texture_type {
    Bilerp bilerp = 2;
    Checkerboard2D checkerboard2d = 3;
    Checkerboard3D checkerboard3d = 4;
    Constant constant = 5;
    Dots dots = 6;
    FBm fbm = 7;
    ImageMap imagemap = 8;
    Marble marble = 9;
    Mix mix = 10;
    Ptex ptex = 11;
    Scale scale = 12;
    Uv uv = 13;
    Windy windy = 14;
    Wrinkled wrinkled = 15;
  }
}

message Transform {
  double m00 = 1 [features.field_presence = LEGACY_REQUIRED];
  double m01 = 2 [features.field_presence = LEGACY_REQUIRED];
  double m02 = 3 [features.field_presence = LEGACY_REQUIRED];
  double m03 = 4 [features.field_presence = LEGACY_REQUIRED];
  double m10 = 5 [features.field_presence = LEGACY_REQUIRED];
  double m11 = 6 [features.field_presence = LEGACY_REQUIRED];
  double m12 = 7 [features.field_presence = LEGACY_REQUIRED];
  double m13 = 8 [features.field_presence = LEGACY_REQUIRED];
  double m20 = 9 [features.field_presence = LEGACY_REQUIRED];
  double m21 = 10 [features.field_presence = LEGACY_REQUIRED];
  double m22 = 11 [features.field_presence = LEGACY_REQUIRED];
  double m23 = 12 [features.field_presence = LEGACY_REQUIRED];
  double m30 = 13 [features.field_presence = LEGACY_REQUIRED];
  double m31 = 14 [features.field_presence = LEGACY_REQUIRED];
  double m32 = 15 [features.field_presence = LEGACY_REQUIRED];
  double m33 = 16 [features.field_presence = LEGACY_REQUIRED];
}

message TransformBegin {
  // Empty Message
}

message TransformEnd {
  // Empty Message
}

message TransformTimes {
  double start_time = 1 [features.field_presence = LEGACY_REQUIRED];
  double end_time = 2 [features.field_presence = LEGACY_REQUIRED];
}

message Translate {
  double x = 1 [features.field_presence = LEGACY_REQUIRED];
  double y = 2 [features.field_presence = LEGACY_REQUIRED];
  double z = 3 [features.field_presence = LEGACY_REQUIRED];
}

message WorldBegin {
  // Empty Message
}

message WorldEnd {
  // Empty Message
}

message Directive {
  oneof directive_type {
    Accelerator accelerator = 1;
    ActiveTransform active_transform = 2;
    AreaLightSource area_light_source = 3;
    AttributeBegin attribute_begin = 4;
    AttributeEnd attribute_end = 5;
    Camera camera = 6;
    ConcatTransform concat_transform = 7;
    CoordinateSystem coordinate_system = 8;
    CoordSysTransform coord_sys_transform = 9;
    Film film = 10;
    Filter filter = 11;
    FloatTexture float_texture = 12;
    Identity identity = 13;
    Include include = 14;
    Integrator integrator = 15;
    LightSource light_source = 16;
    LookAt look_at = 17;
    MakeNamedMaterial make_named_material = 18;
    Material material = 19;
    NamedMaterial named_material = 20;
    ObjectBegin object_begin = 21;
    ObjectEnd object_end = 22;
    ObjectInstance object_instance = 23;
    ReverseOrientation reverse_orientation = 24;
    Rotate rotate = 25;
    Sampler sampler = 26;
    Scale scale = 27;
    SpectrumTexture spectrum_texture = 28;
    Transform transform = 29;
    TransformBegin transform_begin = 30;
    TransformEnd transform_end = 31;
    TransformTimes transform_times = 32;
    Translate translate = 33;
    WorldBegin world_begin = 34;
    WorldEnd world_end = 35;
  }
}

message PbrtProto {
  repeated Directive directives = 1;
}
